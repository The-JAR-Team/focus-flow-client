.video-player {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 20px;
}

.video-player iframe {
  width: 640px;
  height: 390px;
}

.status-info {
  margin: 10px 0;
}

.focus-graph {
  width: 640px;
  margin-top: 20px;
}

/* Flexbox Layout for Centering Video Section */
.video-player-layout {
  display: flex;
  justify-content: center; /* Center the video-section horizontally */
  align-items: flex-start; /* Align items to the top */
  padding: 20px;
  width: 100%;
  box-sizing: border-box;
  position: relative; /* Needed for absolute positioning of the timeline */
  min-height: 500px; /* Ensure layout has height for positioning */
}

.video-section {
  /* Let the content define the width, primarily the YouTube player */
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 640px; /* Fixed width for the video section */
  max-width: 100%; /* Ensure it doesn't overflow viewport */
  flex-shrink: 0; /* Prevent shrinking */
  /* This section is now centered by the parent's justify-content: center */
}

.timeline-section {
  position: absolute;
  /* Position relative to the video-player-layout container */
  top: 20px; /* Match parent's padding-top */
  /* Calculate left position:
     50% = center of the layout container
     + 640px / 2 = half the width of the video section (to get to its right edge)
     + 20px = desired gap
  */
  left: calc(50% + (640px / 2) + 20px);
  height: auto; /* Allow height to be determined by content or props */
  /* Width is controlled by .timeline-container in QuestionTimeline.css (300px) */
  /* Ensure it doesn't prevent interaction with elements behind it if needed */
  z-index: 10; /* Optional: ensure it's above other static content if necessary */
}

/* Ensure items below the player stay within the video section's bounds */
.status-info,
.debug-tools,
.language-options,
.question-generation-status,
.results-plot-chart {
  width: 100%; /* Take full width relative to video-section */
  max-width: 640px; /* Limit to player width */
  box-sizing: border-box;
}

.status-info {
  margin-top: 15px;
  padding: 10px;
  background-color: #f0f0f0;
  border-radius: 5px;
  text-align: center;
}

.debug-tools {
  margin: 20px 0;
  padding: 15px;
  border: 2px dashed #666;
  border-radius: 8px;
  background-color: #f5f5f5;
  display: flex;
  flex-wrap: wrap; /* Allow buttons to wrap */
  justify-content: center; /* Center buttons if they wrap */
  gap: 10px; /* Consistent gap */
}

.debug-tools h3 {
  color: #333;
  margin-bottom: 15px;
  font-size: 1.2rem;
}

.language-options {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin: 20px 0;
}

.question-generation-status {
    margin: 10px 0 20px;
    text-align: center;
    font-size: 0.9em;
    color: #555;
}

.results-plot-chart {
    margin: 20px 0; /* Adjust margin */
    width: 90%;
    height: 450px;
    margin: 20px auto;
}

/* Modal Styles */
.modal-overlay {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal-content {
  background: #fff;
  padding: 30px 25px;
  border-radius: 12px;
  width: 90%;
  max-width: 450px;
  text-align: center;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
}

.modal-content h3 {
  margin-bottom: 10px;
  font-size: 1.3rem;
}

.modal-content p {
  margin-bottom: 20px;
  font-size: 1.1rem;
  color: #333;
}

.answers {
  display: flex;
  flex-direction: column;
  gap: 12px;
  align-items: center;
  width: 100%;
}

.answers button {
  padding: 10px 20px;
  width: 100%;
  max-width: 300px;
  background-color: #333;
  color: white;
  border: none;
  border-radius: 20px;
  font-weight: bold;
  transition: background 0.2s ease;
  cursor: pointer;
}

.answers button:hover {
  background-color: #555;
}

.answers button.dont-know {
  background-color: #666;
  border: 2px solid #888;
  margin-top: 8px;
}

.answers button.dont-know:hover {
  background-color: #777;
}

.answers button,
.decision-buttons button {
  margin: 5px;
  padding: 8px 12px;
  cursor: pointer;
}

.retry-button {
  padding: 8px 16px;
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin-top: 10px;
}

.retry-button:hover {
  background-color: #45a049;
}

@media (max-width: 700px) {
  .video-player iframe,
  .focus-graph {
    width: 90%;
    height: auto;
  }
}

.control-button {
  margin-top: 10px;
  padding: 8px 16px;
  background-color: #444;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.control-button:hover {
  background-color: #555;
}

.control-button.active {
  background-color: #f44336;
}

.control-button.active:hover {
  background-color: #d32f2f;
}

.debug-button {
   padding: 8px 16px;
   margin: 0; /* Remove margin if using gap */
   border: 2px solid #444;
   border-radius: 4px;
   background-color: #fff;
   color: #444;
   cursor: pointer;
   transition: all 0.3s ease;
}

.debug-button.active {
  background-color: #444;
  color: #fff;
}

.debug-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.debug-button.trigger {
  border-color: #ff4444;
  color: #ff4444;
}

.debug-button.trigger.active {
  background-color: #ff4444;
  color: #fff;
}

